volumes:
  {%- if devxhub_python.database_engine == 'postgresql' %}
  production_postgres_data: {}
  production_postgres_data_backups: {}
  {%- endif %}
  {%- if devxhub_python.database_engine == 'mysql' %}
  production_mysql_data: {}
  production_mysql_data_backups: {}
  {%- endif %}
  production_traefik: {}
  {%- if devxhub_python.cloud_provider == 'None' %}
  production_django_media: {}
  {%- endif %}
  {% if devxhub_python.use_celery == 'y' %}
  production_redis_data: {}
  {% endif %}


services:
  django:{% if devxhub_python.use_celery == 'y' %} &django{% endif %}
    build:
      context: .
      dockerfile: ./compose/production/django/Dockerfile
      {%- if devxhub_python.frontend_pipeline == 'Webpack' and devxhub_python.use_whitenoise == 'n' %}
      args:
        # These variable can be defined in an .env file in the root of the repo
        {%- if devxhub_python.cloud_provider == 'AWS' %}
        DJANGO_AWS_STORAGE_BUCKET_NAME: ${DJANGO_AWS_STORAGE_BUCKET_NAME}
        DJANGO_AWS_S3_CUSTOM_DOMAIN: ${DJANGO_AWS_S3_CUSTOM_DOMAIN}
        {%- elif devxhub_python.cloud_provider == 'GCP' %}
        DJANGO_GCP_STORAGE_BUCKET_NAME: ${DJANGO_GCP_STORAGE_BUCKET_NAME}
        {%- elif devxhub_python.cloud_provider == 'Azure' %}
        DJANGO_AZURE_ACCOUNT_NAME: ${DJANGO_AZURE_ACCOUNT_NAME}
        {%- endif %}
      {%- endif %}

    image: {{ devxhub_python.project_slug }}_production_django
    {%- if devxhub_python.cloud_provider == 'None' %}
    volumes:
      - production_django_media:/app/{{ devxhub_python.project_slug }}/media
    {%- endif %}
    {%- if devxhub_python.database_engine == 'mysql' %}
    links:
      - mysql
    {%- endif %}
    depends_on:
      {%- if devxhub_python.database_engine == 'postgresql' %}
      - postgres
      {%- endif %}
      {%- if devxhub_python.database_engine == 'mysql' %}
      - mysql
      {%- endif %}
      - redis
      {%- if devxhub_python.use_selenium == 'y' %}
      - selenium
      {%- endif %}
    env_file:
      - ./.envs/.production/.django
      {%- if devxhub_python.database_engine == 'postgresql' %}
      - ./.envs/.production/.postgres
      {%- endif %}
      {%- if devxhub_python.database_engine == 'mysql' %}
      - ./.envs/.production/.mysql
      {%- endif %}
    command: /start

  {%- if devxhub_python.database_engine == 'postgresql' %}
  postgres:
    build:
      context: .
      dockerfile: ./compose/production/postgres/Dockerfile
    image: {{ devxhub_python.project_slug }}_production_postgres
    volumes:
      - production_postgres_data:/var/lib/postgresql/data
      - production_postgres_data_backups:/backups
    env_file:
      - ./.envs/.production/.postgres
  {%- endif %}
  {%- if devxhub_python.database_engine == 'mysql' %}
  mysql:
    build:
      context: .
      dockerfile: ./compose/production/mysql/Dockerfile
    image: {{ devxhub_python.project_slug }}_production_mysql
    container_name: mysql
    volumes:
      - production_mysql_data:/var/lib/mysql
      - production_mysql_data_backups:/backups
    env_file:
      - ./.envs/.production/.mysql
    
  {%- endif %}

  traefik:
    build:
      context: .
      dockerfile: ./compose/production/traefik/Dockerfile
    image: {{ devxhub_python.project_slug }}_production_traefik
    depends_on:
      - django
    volumes:
      - production_traefik:/etc/traefik/acme
    ports:
      - '0.0.0.0:80:80'
      - '0.0.0.0:443:443'
      {%- if devxhub_python.use_celery == 'y' %}
      - '0.0.0.0:5555:5555'
      {%- endif %}
    env_file:
        - ./.envs/.production/.django

  redis:
    image: docker.io/redis:6
    {% if devxhub_python.use_celery == 'y' %}
    volumes:
      - production_redis_data:/data
    {% endif %}
    
  {%- if devxhub_python.use_celery == 'y' %}

  celeryworker:
    <<: *django
    image: {{ devxhub_python.project_slug }}_production_celeryworker
    command: /start-celeryworker

  celerybeat:
    <<: *django
    image: {{ devxhub_python.project_slug }}_production_celerybeat
    command: /start-celerybeat

  flower:
    <<: *django
    image: {{ devxhub_python.project_slug }}_production_flower
    command: /start-flower
  {%- endif %}
  {%- if devxhub_python.cloud_provider == 'AWS' %}

  awscli:
    build:
      context: .
      dockerfile: ./compose/production/aws/Dockerfile
    env_file:
      - ./.envs/.production/.django
    volumes:
      - production_postgres_data_backups:/backups:z
  {%- endif %}
  {%- if devxhub_python.cloud_provider == 'None' %}

  nginx:
    build:
      context: .
      dockerfile: ./compose/production/nginx/Dockerfile
    image: {{ devxhub_python.project_slug }}_production_nginx
    depends_on:
      - django
    volumes:
      - production_django_media:/usr/share/nginx/media:ro
  {%- endif %}

  {%- if devxhub_python.use_selenium == 'y' %}
  selenium:
    image: seleniarm/standalone-chromium
    ports:
      - "4444:4444"
  {%- endif %}